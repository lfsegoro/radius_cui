##version: '3.8'
# All composed well, this is milestone so I called i v0.2
services:
  database:
    build:
      # images: radapp_postgres
      context: ./database
    environment:
      POSTGRES_USER: radius
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: radius
      # TZ: ${TZ} # Dynamically set timezone based on host
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data:z
      - /etc/localtime:/etc/localtime:ro
    networks:
      custom_network:
        ipv4_address: 192.168.188.2
    healthcheck:                   # Add this section
      test: ["CMD-SHELL", "pg_isready -U radius"]  # Checks if PostgreSQL is ready
      interval: 10s                # Check every 10 seconds
      timeout: 5s                  # Timeout for each check
      retries: 5                   # Retry up to 5 times before marking unhealthy

  radius:
    # environment:
      # - TZ=${TZ} # Dynamically set timezone based on host
    image: freeradius/freeradius-server:3.2.7
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
      - "3799:3799/udp"
    volumes:
      - ./radius_etc/_data/:/etc/freeradius:z
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      database:
        condition: service_healthy  # Waits until the database is healthy
    networks:
      custom_network:
        ipv4_address: 192.168.188.3
    command: ["/usr/sbin/freeradius", "-X"]

  backend:
    build:
      # images: radapp_nodejs
      context: ./backend  # Directory containing your Node.js app and Dockerfile
      args:
        - HOST_IP=${HOST_IP}
    ports:
      - "5000:5000"       # Node.js app port exposed
    environment:
      DB_HOST: database   # Hostname for database service
      DB_PORT: 5432       # PostgreSQL default port
      DB_USER: radius     # Match the database environment variables
      DB_PASSWORD: 1234
      DB_NAME: radius
      HOST_IP: ${HOST_IP}
      # TZ: ${TZ} # Dynamically set timezone based on host
    depends_on:
      - database           # Ensure database container starts first
    networks:
      custom_network:
        ipv4_address: 192.168.188.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
     # - /var/lib/docker/volumes/ftpdata/_data/myapp/radiusapp_backend_persistent/:/app #temp for devel
    #   - ./backend/hostip.sh:/usr/local/bin/hostip.sh
    # command:
    #   - /bin/bash -c "source /usr/local/bin/hostip.sh"

  adminer:
    image: adminer:latest
    environment:
      - ADMINER_DEFAULT_SERVER=192.168.188.2
      # - TZ=${TZ} # Dynamically set timezone based on host
    ports:
      - "8082:8080"  # Adminer accessible at localhost:8081
    depends_on:
      - database
    networks:
      custom_network:
        ipv4_address: 192.168.188.5
    volumes:
      - /etc/localtime:/etc/localtime:ro

networks:
  custom_network:
    ipam:
      config:
        - subnet: 192.168.188.0/24
  default:
    external:
      name: host
volumes:
  pgdata:
#   - radius327:
